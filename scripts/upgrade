#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
admin_user=$(ynh_app_setting_get $app admin_user)
upload_password=$(ynh_app_setting_get $app upload_password)
final_path=$(ynh_app_setting_get $app final_path)
is_public=$(ynh_app_setting_get $app is_public)

#=================================================
# FIX OLD THINGS
#=================================================

if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set $app is_public 1	# Fixe is_public en booléen
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set $app is_public 0
	is_public=0
fi

if [ -z $final_path ]; then	# Si final_path n'est pas renseigné dans app setting
	final_path=/var/www/$app
	ynh_app_setting_set $app final_path $final_path
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

BACKUP_BEFORE_UPGRADE	# Backup the current version of the app
ynh_clean_setup () {
	BACKUP_FAIL_UPGRADE	# restore it if the upgrade fails
}
ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# CHECK THE PATH
#=================================================

path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_setup_source "$final_path"	# Télécharge la source, décompresse et copie dans $final_path

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Create the dedicated user, if not exist

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

ynh_fpm_config	# Créer le fichier de configuration du pool php-fpm et le configure.

#=================================================
# SPECIFIC UPGRADE
#=================================================
# SET THE UPLOAD PASSWORD
#=================================================

jirafeauconfigfile="$final_path/lib/config.local.php"

ynh_backup_if_checksum_is_different "$final_path/lib/config.local.php"	# Créé un backup du fichier de config si il a été modifié.

sudo cp "../conf/config.local.php" "$final_path/lib/config.local.php"

# Set and save upload password, allowing an empty one
if [ -z "$upload_password" ]
then
    ynh_replace_string "YNH_UPLOAD_PASSWORD" "" "$jirafeauconfigfile"
	ynh_app_setting_set $app upload_password ""
else
    ynh_replace_string "YNH_UPLOAD_PASSWORD" "\'$upload_password\'" "$jirafeauconfigfile"
	ynh_app_setting_set $app upload_password "$upload_password"
fi

#=================================================
# CONFIGURE JIRAFEAU
#=================================================

var_root=/home/yunohost.app/$app
ynh_replace_string "YNH_DOMAIN" "$domain" "$jirafeauconfigfile"
if [ "$path_url" = "/" ]
then
	ynh_replace_string "YNH_WWW_PATH" "" "$jirafeauconfigfile"
else
	ynh_replace_string "YNH_WWW_PATH" "$path_url" "$jirafeauconfigfile"
fi
ynh_replace_string "YNH_VAR_ROOT" "$var_root" "$jirafeauconfigfile"
ynh_replace_string "YNH_ADMIN_USER" "$admin_user" "$jirafeauconfigfile"

ynh_store_file_checksum "$jirafeauconfigfile"	# Enregistre la somme de contrôle du fichier de config

# Remove the install.php
sudo rm $final_path/install.php

#=================================================
# GENERIC FINALISATION
#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

# Les fichiers appartiennent à root
sudo chown -R root: $final_path

sudo mkdir -p $var_root/{files,links,async,block}
sudo chown -R $app:root $var_root
sudo chmod -R 700 $var_root

#=================================================
# SETUP SSOWAT
#=================================================

ynh_app_setting_set $app unprotected_uris "/"
if [ $is_public -eq 0 ]
then
	domain_regex=$(echo "$domain" | sed 's@-@.@g')
	[ "$path_url" = "/" ] && path_url=""
	ynh_app_setting_set $app protected_regex "$domain_regex$path_url/$","$domain_regex$path_url/admin.php.*$"
fi

#=================================================
# RELOAD NGINX
#=================================================

sudo systemctl reload nginx
